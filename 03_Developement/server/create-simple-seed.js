const { Client } = require('pg');

async function createRealSeedData() {
  const client = new Client({
    host: 'localhost',
    port: 5432,
    database: 'department_management',
    user: 'postgres',
    password: '123456'
  });

  try {
    await client.connect();
    console.log('üîå Connected to PostgreSQL');

    // 1. Create Vehicle Types
    console.log('üöó Creating vehicle types...');
    await client.query(`
      INSERT INTO "LoaiXe" (ten, "phiThue", "moTa", "createdAt", "updatedAt") VALUES
      ('Xe m√°y', 100000, 'Ph√≠ g·ª≠i xe m√°y h√†ng th√°ng', NOW(), NOW()),
      ('√î t√¥', 1200000, 'Ph√≠ g·ª≠i √¥ t√¥ h√†ng th√°ng', NOW(), NOW()),
      ('Xe ƒë·∫°p ƒëi·ªán', 50000, 'Ph√≠ g·ª≠i xe ƒë·∫°p ƒëi·ªán h√†ng th√°ng', NOW(), NOW())
    `);

    // 2. Create Residents
    console.log('üë• Creating residents...');
    await client.query(`
      INSERT INTO "NhanKhau" ("hoTen", "ngaySinh", "gioiTinh", "danToc", "tonGiao", "cccd", "ngayCap", "noiCap", "ngheNghiep", "ghiChu", "createdAt", "updatedAt") VALUES
      ('Nguy·ªÖn VƒÉn An', '1980-05-15', 'Nam', 'Kinh', 'Kh√¥ng', '001234567890', '2020-01-01', 'CA H√† N·ªôi', 'K·ªπ s∆∞ ph·∫ßn m·ªÅm', NULL, NOW(), NOW()),
      ('Tr·∫ßn Th·ªã B√¨nh', '1985-03-20', 'N·ªØ', 'Kinh', 'Ph·∫≠t gi√°o', '002345678901', '2020-02-01', 'CA H√† N·ªôi', 'B√°c sƒ©', NULL, NOW(), NOW()),
      ('L√™ Minh C∆∞·ªùng', '1978-11-10', 'Nam', 'Kinh', 'Kh√¥ng', '003456789012', '2020-03-01', 'CA H√† N·ªôi', 'Gi√°o vi√™n', NULL, NOW(), NOW()),
      ('Ph·∫°m Th·ªã Di·ªáu', '1990-07-25', 'N·ªØ', 'Kinh', 'C√¥ng gi√°o', '004567890123', '2020-04-01', 'CA H√† N·ªôi', 'K·∫ø to√°n', NULL, NOW(), NOW()),
      ('Ho√†ng VƒÉn Em', '1982-12-08', 'Nam', 'Kinh', 'Kh√¥ng', '005678901234', '2020-05-01', 'CA H√† N·ªôi', 'Kinh doanh', NULL, NOW(), NOW())
    `);

    // 3. Create Households
    console.log('üè† Creating households...');
    await client.query(`
      INSERT INTO "HoKhau" ("chuHo", "soNha", "duong", "phuong", "quan", "thanhPho", "ngayLamHoKhau", "createdAt", "updatedAt") VALUES
      (1, '101', 'L√™ VƒÉn L∆∞∆°ng', 'Nh√¢n Ch√≠nh', 'Thanh Xu√¢n', 'H√† N·ªôi', '2023-01-01', NOW(), NOW()),
      (2, '102', 'L√™ VƒÉn L∆∞∆°ng', 'Nh√¢n Ch√≠nh', 'Thanh Xu√¢n', 'H√† N·ªôi', '2023-02-01', NOW(), NOW()),
      (3, '103', 'L√™ VƒÉn L∆∞∆°ng', 'Nh√¢n Ch√≠nh', 'Thanh Xu√¢n', 'H√† N·ªôi', '2023-03-01', NOW(), NOW()),
      (4, '201', 'L√™ VƒÉn L∆∞∆°ng', 'Nh√¢n Ch√≠nh', 'Thanh Xu√¢n', 'H√† N·ªôi', '2023-04-01', NOW(), NOW()),
      (5, '202', 'L√™ VƒÉn L∆∞∆°ng', 'Nh√¢n Ch√≠nh', 'Thanh Xu√¢n', 'H√† N·ªôi', '2023-05-01', NOW(), NOW())
    `);

    // 4. Create Apartments
    console.log('üè¢ Creating apartments...');
    await client.query(`
      INSERT INTO "Canho" ("soPhong", "dienTich", "hoKhauId", "createdAt", "updatedAt") VALUES
      (101, 75.5, 1, NOW(), NOW()),
      (102, 85.2, 2, NOW(), NOW()),
      (103, 95.8, 3, NOW(), NOW()),
      (201, 75.5, 4, NOW(), NOW()),
      (202, 85.2, 5, NOW(), NOW()),
      (203, 95.8, NULL, NOW(), NOW()),
      (301, 75.5, NULL, NOW(), NOW()),
      (302, 85.2, NULL, NOW(), NOW()),
      (303, 95.8, NULL, NOW(), NOW()),
      (401, 120.5, NULL, NOW(), NOW())
    `);

    // 5. Create Fee Types (KhoanThu)
    console.log('üí∞ Creating fee types...');
    await client.query(`
      INSERT INTO "KhoanThu" ("tenkhoanthu", "ngaytao", "thoihan", "batbuoc", "ghichu", "createdAt", "updatedAt") VALUES
      ('Ph√≠ qu·∫£n l√Ω chung c∆∞', NOW(), '2025-12-31', true, 'Ph√≠ qu·∫£n l√Ω chung c∆∞ h√†ng th√°ng theo di·ªán t√≠ch', NOW(), NOW()),
      ('Ph√≠ g·ª≠i xe', NOW(), '2025-12-31', true, 'Ph√≠ g·ª≠i xe m√°y v√† √¥ t√¥ h√†ng th√°ng', NOW(), NOW()),
      ('Ph√≠ ƒëi·ªán', NOW(), '2025-12-31', true, 'Ti·ªÅn ƒëi·ªán h√†ng th√°ng theo s·ªë ƒëo c√¥ng t∆°', NOW(), NOW()),
      ('Ph√≠ n∆∞·ªõc', NOW(), '2025-12-31', true, 'Ti·ªÅn n∆∞·ªõc h√†ng th√°ng theo s·ªë ƒëo ƒë·ªìng h·ªì', NOW(), NOW()),
      ('Ph√≠ internet', NOW(), '2025-12-31', false, 'Ph√≠ internet chung c·ªßa t√≤a nh√†', NOW(), NOW()),
      ('Ph√≠ b·∫£o v·ªá', NOW(), '2025-12-31', true, 'Ph√≠ d·ªãch v·ª• b·∫£o v·ªá 24/7', NOW(), NOW())
    `);

    // 6. Create Collection Periods (DotThu)
    console.log('üìÖ Creating collection periods...');
    await client.query(`
      INSERT INTO "DotThu" ("tenDotThu", "ngayTao", "thoiHan", "createdAt", "updatedAt") VALUES
      ('Thu ph√≠ th√°ng 6/2025', '2025-06-01', '2025-06-30', NOW(), NOW()),
      ('Thu ph√≠ th√°ng 7/2025', '2025-07-01', '2025-07-31', NOW(), NOW())
    `);

    // 7. Create Period-Fee relationships
    console.log('üîó Creating period-fee relationships...');
    await client.query(`
      INSERT INTO "DotThu_KhoanThu" ("dotThuId", "khoanThuId", "soTien", "createdAt", "updatedAt") VALUES
      (1, 1, 50000, NOW(), NOW()),
      (1, 2, 100000, NOW(), NOW()),
      (1, 3, 0, NOW(), NOW()),
      (1, 4, 0, NOW(), NOW()),
      (1, 5, 150000, NOW(), NOW()),
      (1, 6, 200000, NOW(), NOW()),
      (2, 1, 50000, NOW(), NOW()),
      (2, 2, 100000, NOW(), NOW()),
      (2, 3, 0, NOW(), NOW()),
      (2, 4, 0, NOW(), NOW())
    `);

    // 8. Create household members
    console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Creating household members...');
    await client.query(`
      INSERT INTO "ThanhVienHoKhau" ("nhanKhauId", "hoKhauId", "ngayThemNhanKhau", "quanHeVoiChuHo", "createdAt", "updatedAt") VALUES
      (1, 1, '2023-01-01', 'ch·ªß h·ªô', NOW(), NOW()),
      (2, 2, '2023-02-01', 'ch·ªß h·ªô', NOW(), NOW()),
      (3, 3, '2023-03-01', 'ch·ªß h·ªô', NOW(), NOW()),
      (4, 4, '2023-04-01', 'ch·ªß h·ªô', NOW(), NOW()),
      (5, 5, '2023-05-01', 'ch·ªß h·ªô', NOW(), NOW())
    `);

    // 9. Create vehicle registrations
    console.log('üöó Creating vehicle registrations...');
    await client.query(`
      INSERT INTO "QuanLyXe" ("hoKhauId", "loaiXeId", "bienSo", "ngayBatDau", "ngayKetThuc", "trangThai", "createdAt", "updatedAt") VALUES
      (1, 1, '29B1-12345', '2023-01-15', NULL, 'ƒêang s·ª≠ d·ª•ng', NOW(), NOW()),
      (2, 1, '29B1-23456', '2023-02-15', NULL, 'ƒêang s·ª≠ d·ª•ng', NOW(), NOW()),
      (2, 2, '29A-34567', '2023-03-01', NULL, 'ƒêang s·ª≠ d·ª•ng', NOW(), NOW()),
      (3, 1, '29B1-45678', '2023-03-15', NULL, 'ƒêang s·ª≠ d·ª•ng', NOW(), NOW()),
      (5, 2, '29A-56789', '2023-05-15', NULL, 'ƒêang s·ª≠ d·ª•ng', NOW(), NOW())
    `);

    // 10. Create some payment records
    console.log('üí≥ Creating payment records...');
    await client.query(`
      INSERT INTO "NopPhi" ("hokhau_id", "khoanthu_id", "sotien", "ngaynop", "nguoinop", "phuongthuc", "ghichu", "status", "createdAt", "updatedAt") VALUES
      (1, 1, 377500, '2025-06-05', 'Nguy·ªÖn VƒÉn An', 'BANK_TRANSFER', 'N·ªôp ph√≠ qu·∫£n l√Ω th√°ng 6', 'ACTIVE', NOW(), NOW()),
      (1, 2, 100000, '2025-06-05', 'Nguy·ªÖn VƒÉn An', 'BANK_TRANSFER', 'N·ªôp ph√≠ g·ª≠i xe th√°ng 6', 'ACTIVE', NOW(), NOW()),
      (2, 1, 426000, '2025-06-03', 'Tr·∫ßn Th·ªã B√¨nh', 'CASH', 'N·ªôp ph√≠ qu·∫£n l√Ω th√°ng 6', 'ACTIVE', NOW(), NOW()),
      (2, 2, 1300000, '2025-06-03', 'Tr·∫ßn Th·ªã B√¨nh', 'CASH', 'N·ªôp ph√≠ g·ª≠i xe th√°ng 6', 'ACTIVE', NOW(), NOW()),
      (3, 6, 200000, '2025-06-02', 'L√™ Minh C∆∞·ªùng', 'ONLINE', 'N·ªôp ph√≠ b·∫£o v·ªá th√°ng 6', 'ACTIVE', NOW(), NOW())
    `);

    console.log('üéâ Real seed data created successfully!');
    console.log('üìä Summary:');
    console.log('  - 3 vehicle types');
    console.log('  - 10 apartments');
    console.log('  - 5 residents');
    console.log('  - 5 households');
    console.log('  - 6 fee types');
    console.log('  - 2 collection periods');
    console.log('  - 10 period-fee relationships');
    console.log('  - 5 household members');
    console.log('  - 5 vehicle registrations');
    console.log('  - 5 payment records');

  } catch (error) {
    console.error('‚ùå Error creating seed data:', error);
  } finally {
    await client.end();
  }
}

createRealSeedData();
